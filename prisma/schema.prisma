generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  TEACHER
  STUDENT
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  username     String?
  role         Role?
  classes      ClassToStudent[]
  classId      String?
  classesOwned Class[]          @relation("ClassOwner")

  @@index([email])
}

model Class {
  id String @id @default(cuid())

  owner   User   @relation("ClassOwner", fields: [ownerId], references: [id])
  ownerId String

  name     String
  students ClassToStudent[]

  resources Resources[]
}

model Resources {
  id   String @id @default(cuid())
  name String

  subject String

  resourceUrl String

  class   Class  @relation(fields: [classId], references: [id])
  classId String
}

model ClassToStudent {
  class   Class  @relation(fields: [classId], references: [id])
  classId String

  student   User   @relation(fields: [studentId], references: [id])
  studentId String

  @@id([classId, studentId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
